
--SENTENCIAS DE INICIALIZACIÓN

DROP TABLE TRABAJADOR CASCADE CONSTRAINTS;
DROP TABLE FARMACEUTICO CASCADE CONSTRAINTS;
DROP TABLE INVESTIGADOR CASCADE CONSTRAINTS;
DROP TABLE SUPERVISOR CASCADE CONSTRAINTS;
DROP TABLE DEPARTAMENTO CASCADE CONSTRAINTS;
DROP TABLE PROYECTO CASCADE CONSTRAINTS;
DROP TABLE INVESTIGADOR_DEPARTAMENTO CASCADE CONSTRAINTS;
DROP TABLE MEDICAMENTO CASCADE CONSTRAINTS;
DROP TABLE CAMIONERO CASCADE CONSTRAINTS;
DROP TABLE FARMACIA CASCADE CONSTRAINTS;
DROP TABLE COMPANIAENVIOS CASCADE CONSTRAINTS;
DROP TABLE ENVIO CASCADE CONSTRAINTS;

--DROP DE INDICES
DROP INDEX IDX_TRABAJADOR_NOMBRE;

--DROP VIEWS
DROP VIEW V_CONTACTOSTRABAJADOR;
DROP VIEW V_MEDICAMENTOSCADUCADOS; //CREO QUE ESTA MAL


--TABLAS

CREATE TABLE TRABAJADOR (
    ID INT PRIMARY KEY,
    SALARIO INT NOT NULL,
    DNI VARCHAR(9) NOT NULL,
    NSS VARCHAR(11) NOT NULL,
    EDAD INT CHECK(EDAD > 16),
    TLF VARCHAR(15),
    NOMBRE VARCHAR(50) NOT NULL,
    APELLIDOS VARCHAR(100) NOT NULL,
    DIRECCION VARCHAR(150),
    FECHA_INICIO_CONTRATO DATE NOT NULL
);

CREATE TABLE FARMACEUTICO (
    ID INT PRIMARY KEY,
    LICENCIA VARCHAR(20) NOT NULL,
    JEFE INT, 
    FOREIGN KEY (ID) REFERENCES TRABAJADOR(ID) ON DELETE CASCADE
);

ALTER TABLE FARMACEUTICO ADD FOREIGN KEY (JEFE) REFERENCES FARMACEUTICO(ID) ON DELETE CASCADE;

CREATE TABLE INVESTIGADOR (
    ID INT PRIMARY KEY,
    TITULO VARCHAR(50) NOT NULL,
    FOREIGN KEY (ID) REFERENCES TRABAJADOR(ID) ON DELETE CASCADE
);

CREATE TABLE SUPERVISOR (
    ID INT PRIMARY KEY,
    ID_FARMACEUTICO INT NOT NULL,
    ID_INVESTIGADOR INT NOT NULL,
    FOREIGN KEY (ID_FARMACEUTICO) REFERENCES FARMACEUTICO(ID),
    FOREIGN KEY (ID_INVESTIGADOR) REFERENCES INVESTIGADOR(ID),
    CHECK (ID_FARMACEUTICO IS NOT NULL AND ID_INVESTIGADOR IS NOT NULL)
);

CREATE TABLE DEPARTAMENTO (
    CODIGO VARCHAR(10) PRIMARY KEY,
    NOMBRE VARCHAR(50) UNIQUE NOT NULL,
    TELEFONO VARCHAR(15),
    ID_DIRIGE INT,
    FOREIGN KEY (ID_DIRIGE) REFERENCES INVESTIGADOR(ID)
);

CREATE TABLE PROYECTO (
    NUMERO_SECUENCIAL INT NOT NULL,
    NOMBRE VARCHAR(100) NOT NULL,
    DESCRIPCION VARCHAR(255),
    CODIGO_DEPARTAMENTO VARCHAR(10),
    PRIMARY KEY(CODIGO_DEPARTAMENTO, NUMERO_SECUENCIAL),
    FOREIGN KEY (CODIGO_DEPARTAMENTO) REFERENCES DEPARTAMENTO(CODIGO) ON DELETE SET NULL
);

CREATE TABLE INVESTIGADOR_DEPARTAMENTO (
    ID_INVESTIGADOR INT,
    CODIGO_DEPARTAMENTO VARCHAR(10),
    PRIMARY KEY(ID_INVESTIGADOR, CODIGO_DEPARTAMENTO),
    FOREIGN KEY (ID_INVESTIGADOR) REFERENCES INVESTIGADOR(ID) ON DELETE CASCADE,
    FOREIGN KEY (CODIGO_DEPARTAMENTO) REFERENCES DEPARTAMENTO(CODIGO) ON DELETE CASCADE
);

CREATE TABLE MEDICAMENTO (
    CODIGO VARCHAR(20) PRIMARY KEY,
    FECHA_CADUCIDAD DATE NOT NULL,
    FECHA_CREACION DATE NOT NULL,
    DESCRIPCION VARCHAR(255),
    TIPO VARCHAR(20),
    SUPERVISOR INT NOT NULL,
    COD_DEPARTAMENTO VARCHAR(10) NOT NULL,
    FOREIGN KEY(SUPERVISOR) REFERENCES SUPERVISOR(ID) ON DELETE CASCADE,
    FOREIGN KEY(COD_DEPARTAMENTO) REFERENCES DEPARTAMENTO(CODIGO) ON DELETE CASCADE,
    CHECK (TIPO IN ('VACUNA', 'ANTIBIOTICO', 'ANALGESICO')),
    CHECK (FECHA_CADUCIDAD > FECHA_CREACION)
);

CREATE TABLE CAMIONERO (
    ID INT PRIMARY KEY,
    DNI VARCHAR(9) NOT NULL,
    MATRICULA_CAMION VARCHAR(20) NOT NULL
);

CREATE TABLE FARMACIA (
    ID INT PRIMARY KEY,
    DIRECCION VARCHAR(80) NOT NULL,
    NOMBRE VARCHAR(40) NOT NULL,
    TELEFONO VARCHAR(15),
    FECHA_INICIO DATE NOT NULL,
    FECHA_FIN DATE NOT NULL,
    REPARTIDOR INT,
    FOREIGN KEY (REPARTIDOR) REFERENCES CAMIONERO(ID) ON DELETE SET NULL
);

CREATE TABLE COMPANIAENVIOS (
    CODIGO VARCHAR(10) PRIMARY KEY,
    NOMBRE VARCHAR(50),
    TELEFONO VARCHAR(15),
    DIRECCION VARCHAR(150)
);


CREATE TABLE ENVIO (
    CAMIONERO_ID INT,
    FARMACIA_ID INT,
    CODIGO_COMPANIA VARCHAR(10),
    PRIMARY KEY(FARMACIA_ID, CAMIONERO_ID),
    FARMACEUTICO_RECIVIDOR_ID INT,
    FOREIGN KEY (FARMACEUTICO_RECIVIDOR_ID) REFERENCES FARMACEUTICO(ID) ON DELETE SET NULL,
    FOREIGN KEY (CAMIONERO_ID) REFERENCES CAMIONERO(ID) ON DELETE SET NULL,
    FOREIGN KEY (FARMACIA_ID) REFERENCES FARMACIA(ID) ON DELETE SET NULL,
    FOREIGN KEY (CODIGO_COMPANIA) REFERENCES COMPANIAENVIOS(CODIGO) ON DELETE CASCADE
    
);





CREATE INDEX IDX_TRABAJADOR_NOMBRE ON TRABAJADOR(NOMBRE);



--VISTAS

--Vista actualizable (Necesaria en caso de querer consultar informacion especifica para contactar a un trabajador)

CREATE VIEW V_CONTACTOSTRABAJADOR AS
SELECT 
    ID,
    NOMBRE,
    APELLIDOS,
    TLF,
    DIRECCION
FROM TRABAJADOR;

/*
--Vista no actualizable (Necesaria para mantener un control calidad y seguridad en los productos de la farmacia)

CREATE VIEW V_MEDICAMENTOSCADUCADOS AS
SELECT 
    m.CODIGO,
    m.FECHA_CADUCIDAD,
    m.FECHA_CREACION,
    m.TIPO,
    s.ID AS SUPERVISOR_ID
FROM MEDICAMENTO m
JOIN SUPERVISOR s ON m.SUPERVISOR = s.ID
WHERE CURRENT_DATE > m.FECHA_CADUCIDAD;

*/

--INSERCIONS

INSERT INTO TRABAJADOR (ID, SALARIO,  DNI, NSS, EDAD, TLF, NOMBRE, APELLIDOS, DIRECCION, FECHA_INICIO_CONTRATO) 
VALUES (1, 1000, '12345678A', '12345678901', 30, '600123456', 'Juan', 'Pérez García', 'Calle Mayor 10, Madrid', TO_DATE('2019-05-15', 'YYYY-MM-DD'));

INSERT INTO TRABAJADOR (ID, SALARIO, DNI, NSS, EDAD, TLF, NOMBRE, APELLIDOS, DIRECCION, FECHA_INICIO_CONTRATO) 
VALUES (2, 1500, '65432198Y', '00000000004', 38, '669876543', 'LAURA', 'MARTÍNEZ', 'CALLE AMARILLA 987', TO_DATE('2021-02-10', 'YYYY-MM-DD'));

INSERT INTO TRABAJADOR (ID, SALARIO, DNI, NSS, EDAD, TLF, NOMBRE, APELLIDOS, DIRECCION, FECHA_INICIO_CONTRATO) 
VALUES (3, 2000, '12342198Y', '00000000005', 38, '669871234', 'PAULA', 'MARTÍNEZ', 'CALLE AZUL 987', TO_DATE('2020-08-15', 'YYYY-MM-DD'));

INSERT INTO TRABAJADOR (ID, SALARIO, DNI, NSS, EDAD, TLF, NOMBRE, APELLIDOS, DIRECCION, FECHA_INICIO_CONTRATO) 
VALUES (4, 1800, '98765432X', '00000000006', 35, '600987654', 'MARIO', 'GÓMEZ FERNÁNDEZ', 'Calle Verde 45, Sevilla', TO_DATE('2020-07-01', 'YYYY-MM-DD'));

INSERT INTO TRABAJADOR (ID, SALARIO, DNI, NSS, EDAD, TLF, NOMBRE, APELLIDOS, DIRECCION, FECHA_INICIO_CONTRATO) 
VALUES (5, 1700, '56781234L', '00000000007', 28, '680123789', 'ISABEL', 'GARCÍA RUIZ', 'Avenida de la Luna 123, Barcelona', TO_DATE('2022-01-20', 'YYYY-MM-DD'));

INSERT INTO TRABAJADOR (ID, SALARIO, DNI, NSS, EDAD, TLF, NOMBRE, APELLIDOS, DIRECCION, FECHA_INICIO_CONTRATO) 
VALUES (6, 1600, '87654321W', '00000000008', 42, '690876543', 'JOSÉ', 'PÉREZ MARTÍNEZ', 'Calle del Sol 34, Valencia', TO_DATE('2019-03-11', 'YYYY-MM-DD'));

INSERT INTO TRABAJADOR (ID, SALARIO, DNI, NSS, EDAD, TLF, NOMBRE, APELLIDOS, DIRECCION, FECHA_INICIO_CONTRATO) 
VALUES (7, 2200, '11223344K', '00000000009', 29, '625123456', 'LUIS', 'LÓPEZ GARCÍA', 'Calle Gran Vía 12, Madrid', TO_DATE('2021-09-15', 'YYYY-MM-DD'));

INSERT INTO TRABAJADOR (ID, SALARIO, DNI, NSS, EDAD, TLF, NOMBRE, APELLIDOS, DIRECCION, FECHA_INICIO_CONTRATO) 
VALUES (8, 1400, '33445566J', '00000000010', 31, '623987654', 'CARLA', 'SÁNCHEZ PÉREZ', 'Calle Pequeña 67, Zaragoza', TO_DATE('2020-10-25', 'YYYY-MM-DD'));


--PARA PODER AÑADIRLO TIENE QUE TENER EL MISMO ID QUE ALGUN TRABAJADOR

INSERT INTO FARMACEUTICO (ID, LICENCIA, JEFE) 
VALUES (1, 'LIC5678', NULL);

INSERT INTO FARMACEUTICO (ID, LICENCIA, JEFE)
VALUES(2,'LIC4321',1);

INSERT INTO INVESTIGADOR (ID, TITULO) 
VALUES (1, 'LICENCIATURA EN QUÍMICA');

INSERT INTO INVESTIGADOR (ID, TITULO) 
VALUES (3, 'LICENCIATURA EN INVESTIGACION QUIMICA');

INSERT INTO INVESTIGADOR (ID, TITULO) 
VALUES (4, 'LICENCIATURA EN FÍSICA');

INSERT INTO INVESTIGADOR (ID, TITULO) 
VALUES (5, 'LICENCIATURA EN BIOLOGÍA');

INSERT INTO INVESTIGADOR (ID, TITULO) 
VALUES (6, 'LICENCIATURA EN FARMACIA');

INSERT INTO INVESTIGADOR (ID, TITULO) 
VALUES (7, 'LICENCIATURA EN MATEMÁTICAS');

INSERT INTO INVESTIGADOR (ID, TITULO) 
VALUES (8, 'LICENCIATURA EN INGENIERÍA QUÍMICA');

INSERT INTO SUPERVISOR(ID,ID_FARMACEUTICO,ID_INVESTIGADOR)
VALUES (1,1,1);

INSERT INTO SUPERVISOR(ID,ID_FARMACEUTICO,ID_INVESTIGADOR)
VALUES (2,2,3);

INSERT INTO DEPARTAMENTO (CODIGO, NOMBRE, TELEFONO, ID_DIRIGE) 
VALUES ('D001', 'INVESTIGACIÓN VACUNAS', '917654321', 1);

INSERT INTO DEPARTAMENTO (CODIGO, NOMBRE, TELEFONO, ID_DIRIGE) 
VALUES ('D002', 'INVESTIGACIÓN QUÍMICA', '917654321', 3);

INSERT INTO INVESTIGADOR_DEPARTAMENTO (ID_INVESTIGADOR, CODIGO_DEPARTAMENTO)
VALUES (3, 'D002');

INSERT INTO INVESTIGADOR_DEPARTAMENTO (ID_INVESTIGADOR, CODIGO_DEPARTAMENTO)
VALUES (4, 'D002');

INSERT INTO INVESTIGADOR_DEPARTAMENTO (ID_INVESTIGADOR, CODIGO_DEPARTAMENTO)
VALUES (5, 'D002');

INSERT INTO INVESTIGADOR_DEPARTAMENTO (ID_INVESTIGADOR, CODIGO_DEPARTAMENTO)
VALUES (6, 'D002');

INSERT INTO INVESTIGADOR_DEPARTAMENTO (ID_INVESTIGADOR, CODIGO_DEPARTAMENTO)
VALUES (7, 'D002');

INSERT INTO INVESTIGADOR_DEPARTAMENTO (ID_INVESTIGADOR, CODIGO_DEPARTAMENTO)
VALUES (8, 'D002');


INSERT INTO MEDICAMENTO (CODIGO, FECHA_CADUCIDAD, FECHA_CREACION, DESCRIPCION, TIPO, SUPERVISOR, COD_DEPARTAMENTO )
VALUES ('M002', TO_DATE('2026-07-30', 'YYYY-MM-DD'), TO_DATE('2024-05-23', 'YYYY-MM-DD'), 'ANALGÉSICO PARA EL DOLOR', 'ANALGESICO', 1, 'D001');

INSERT INTO MEDICAMENTO (CODIGO, FECHA_CADUCIDAD, FECHA_CREACION, DESCRIPCION, TIPO, SUPERVISOR, COD_DEPARTAMENTO)
VALUES ('M005', TO_DATE('2025-12-15', 'YYYY-MM-DD'), TO_DATE('2023-06-10', 'YYYY-MM-DD'), 'ANALGÉSICO PARA DOLORES MUSCULARES', 'ANALGESICO', 2, 'D002');

INSERT INTO MEDICAMENTO (CODIGO, FECHA_CADUCIDAD, FECHA_CREACION, DESCRIPCION, TIPO, SUPERVISOR, COD_DEPARTAMENTO)
VALUES ('M006', TO_DATE('2026-03-20', 'YYYY-MM-DD'), TO_DATE('2023-01-05', 'YYYY-MM-DD'), 'ANALGÉSICO CONTRA EL DOLOR DE CABEZA', 'ANALGESICO', 1, 'D001');

INSERT INTO MEDICAMENTO (CODIGO, FECHA_CADUCIDAD, FECHA_CREACION, DESCRIPCION, TIPO, SUPERVISOR, COD_DEPARTAMENTO)
VALUES ('M007', TO_DATE('2024-08-10', 'YYYY-MM-DD'), TO_DATE('2022-02-15', 'YYYY-MM-DD'), 'ANALGÉSICO PARA DOLORES ARTICULARES', 'ANALGESICO', 2, 'D002');


INSERT INTO MEDICAMENTO (CODIGO, FECHA_CADUCIDAD, FECHA_CREACION, DESCRIPCION, TIPO, SUPERVISOR, COD_DEPARTAMENTO)
VALUES ('M003', TO_DATE('2024-09-30', 'YYYY-MM-DD'), TO_DATE('2022-03-22', 'YYYY-MM-DD'), 'VACUNA PARA EL TÉTANO', 'VACUNA', 1,'D001');

INSERT INTO MEDICAMENTO (CODIGO, FECHA_CADUCIDAD, FECHA_CREACION, DESCRIPCION, TIPO, SUPERVISOR, COD_DEPARTAMENTO)
VALUES ('M008', TO_DATE('2027-01-01', 'YYYY-MM-DD'), TO_DATE('2024-01-15', 'YYYY-MM-DD'), 'VACUNA CONTRA LA GRIPE', 'VACUNA', 2, 'D002');

INSERT INTO MEDICAMENTO (CODIGO, FECHA_CADUCIDAD, FECHA_CREACION, DESCRIPCION, TIPO, SUPERVISOR, COD_DEPARTAMENTO)
VALUES ('M009', TO_DATE('2026-11-30', 'YYYY-MM-DD'), TO_DATE('2023-05-10', 'YYYY-MM-DD'), 'VACUNA PARA EL COVID-19', 'VACUNA', 1, 'D001');

INSERT INTO MEDICAMENTO (CODIGO, FECHA_CADUCIDAD, FECHA_CREACION, DESCRIPCION, TIPO, SUPERVISOR, COD_DEPARTAMENTO)
VALUES ('M010', TO_DATE('2025-06-25', 'YYYY-MM-DD'), TO_DATE('2021-09-14', 'YYYY-MM-DD'), 'VACUNA CONTRA LA RABIA', 'VACUNA', 2, 'D002');


INSERT INTO MEDICAMENTO (CODIGO, FECHA_CADUCIDAD, FECHA_CREACION, DESCRIPCION, TIPO, SUPERVISOR, COD_DEPARTAMENTO)
VALUES ('M004', TO_DATE('2025-05-29', 'YYYY-MM-DD'), TO_DATE('2021-07-15', 'YYYY-MM-DD'), 'ANTIBIÓTICO PARA LA NEUMONÍA', 'ANTIBIOTICO', 2, 'D002');

INSERT INTO MEDICAMENTO (CODIGO, FECHA_CADUCIDAD, FECHA_CREACION, DESCRIPCION, TIPO, SUPERVISOR, COD_DEPARTAMENTO)
VALUES ('M011', TO_DATE('2024-10-15', 'YYYY-MM-DD'), TO_DATE('2022-06-10', 'YYYY-MM-DD'), 'ANTIBIÓTICO PARA INFECCIÓN RESPIRATORIA', 'ANTIBIOTICO', 2, 'D002');

INSERT INTO MEDICAMENTO (CODIGO, FECHA_CADUCIDAD, FECHA_CREACION, DESCRIPCION, TIPO, SUPERVISOR, COD_DEPARTAMENTO)
VALUES ('M012', TO_DATE('2026-02-05', 'YYYY-MM-DD'), TO_DATE('2024-03-01', 'YYYY-MM-DD'), 'ANTIBIÓTICO CONTRA LA FIEBRE TIFOIDEA', 'ANTIBIOTICO', 1, 'D001');

INSERT INTO MEDICAMENTO (CODIGO, FECHA_CADUCIDAD, FECHA_CREACION, DESCRIPCION, TIPO, SUPERVISOR, COD_DEPARTAMENTO)
VALUES ('M013', TO_DATE('2025-12-31', 'YYYY-MM-DD'), TO_DATE('2023-11-01', 'YYYY-MM-DD'), 'ANTIBIÓTICO PARA INFECCIONES URINARIAS', 'ANTIBIOTICO', 2, 'D002');


INSERT INTO CAMIONERO (ID, DNI, MATRICULA_CAMION)
VALUES ('2234', '46777889Q', 'XYZ7890');

INSERT INTO FARMACIA (ID, DIRECCION, NOMBRE, TELEFONO, FECHA_INICIO, FECHA_FIN, REPARTIDOR)
VALUES (101, 'CALLE BOTICA 456','BOTICA', '914567890',TO_DATE('2024-05-01', 'YYYY-MM-DD'), TO_DATE('2024-05-02', 'YYYY-MM-DD'), 2234);

INSERT INTO COMPANIAENVIOS (CODIGO, NOMBRE, TELEFONO, DIRECCION)
VALUES ('CE002', 'LOGÍSTICA EXPRESS S.L.', '918234567', 'AVENIDA EMPRESA 20');

INSERT INTO ENVIO ( CAMIONERO_ID, FARMACIA_ID, CODIGO_COMPANIA, FARMACEUTICO_RECIVIDOR_ID)
VALUES ( '2234', 101, 'CE002', 2);


--SENTENCIAS DE COMPROBACION

--TABLA TRABAJADOR
SELECT * FROM TRABAJADOR;

SELECT * FROM FARMACEUTICO;

SELECT * FROM INVESTIGADOR;

SELECT * FROM SUPERVISOR;

SELECT * FROM DEPARTAMENTO;

SELECT * FROM INVESTIGADOR_DEPARTAMENTO;

SELECT * FROM MEDICAMENTO;

SELECT * FROM CAMIONERO;

SELECT * FROM FARMACIA ;

SELECT * FROM COMPANIAENVIOS;

SELECT * FROM ENVIO;

SELECT * FROM V_MEDICAMENTOSCADUCADOS;

SELECT * FROM V_CONTACTOSTRABAJADOR;

--DEBEN DAR ERROR:

--Comprobar CHECK(EDAD>16)
INSERT INTO TRABAJADOR (ID, DNI, NSS, EDAD, TLF, NOMBRE, APELLIDOS, DIRECCION, FECHA_INICIO_CONTRATO) 
VALUES (1, 1000, '12345678A', '12345678901', 10, '600123456', 'Juan', 'Pérez García', 'Calle Mayor 10, Madrid', TO_DATE('2019-05-15', 'YYYY-MM-DD'));

--CHECK (ID_FARMACEUTICO IS NOT NULL AND ID_INVESTIGADOR IS NOT NULL) 
INSERT INTO SUPERVISOR(ID,ID_FARMACEUTICO,ID_INVESTIGADOR)
VALUES (1,1,NULL);

--CHECK (TIPO IN ('VACUNA', 'ANTIBIOTICO', 'ANALGESICO')),
INSERT INTO MEDICAMENTO (CODIGO, FECHA_CADUCIDAD, FECHA_CREACION, DESCRIPCION, TIPO, SUPERVISOR)
VALUES ('M005', TO_DATE('2026-09-30', 'YYYY-MM-DD'), TO_DATE('2024-03-22', 'YYYY-MM-DD'), 'ANALGÉSICO PARA EL DOLOR', 'ANTINFLAMATORIO', 1);

--CHECK (FECHA_CADUCIDAD > FECHA_CREACION)
INSERT INTO MEDICAMENTO (CODIGO, FECHA_CADUCIDAD, FECHA_CREACION, DESCRIPCION, TIPO, SUPERVISOR)
VALUES ('M007', TO_DATE('2024-09-30', 'YYYY-MM-DD'), TO_DATE('2026-03-22', 'YYYY-MM-DD'), 'ANALGÉSICO PARA EL DOLOR', 'ANALGESICO', 1);

--CHECK (FECHA_INICIO < FECHA_FIN)
INSERT INTO FARMACIA (ID, DIRECCION, NOMBRE, TELEFONO, FECHA_INICIO, FECHA_FIN, REPARTIDOR)
VALUES (101, 'CALLE BOTICA 456','BOTICA', '914567890',TO_DATE('2024-05-03', 'YYYY-MM-DD'), TO_DATE('2024-05-02', 'YYYY-MM-DD'), 2234);


CREATE OR REPLACE FUNCTION medicamentos_por_departamento(codDept IN VARCHAR)
RETURN NUMBER
IS
    resultado NUMBER;
    existe NUMBER;
BEGIN
    SELECT COUNT(*) INTO existe
    FROM DEPARTAMENTO
    WHERE CODIGO=codDept;
    IF existe = 0 THEN
    RAISE_APPLICATION_ERROR(-20001, 'Código de departamento inválido');
    END IF;
    SELECT COUNT(CODIGO) INTO resultado
    FROM MEDICAMENTO M
    WHERE COD_DEPARTAMENTO = codDept;
    RETURN resultado;
END medicamentos_por_departamento;
/


CREATE OR REPLACE FUNCTION SumaSalariosDept(nomDept IN VARCHAR)
RETURN NUMBER
IS
   sumaSalarios NUMBER;
BEGIN
   IF nomDept IS NULL THEN
      RAISE_APPLICATION_ERROR(-20001, 'El Departamento suministrado no existe');
   END IF;
   
   SELECT SUM(SAL) INTO sumaSalarios
      FROM DEPARTAMENTO D, INVESTIGADOR I, TRABAJADOR T 
      WHERE D.CODIGO=I.CODIGO_DEPARTAMENTO AND I.ID=T.ID AND D.NOMBRE=nomDept;
   RETURN sumaSalarios;
END SumaSalariosDept;
/



CREATE OR REPLACE PROCEDURE listar_trabajadores_supervisados(
    p_supervisor_id IN INT
)
IS
    -- Declaramos el cursor explícito con producto cartesiano
    CURSOR c_trabajadores IS
        SELECT T.ID, T.NOMBRE, T.APELLIDOS
        FROM TRABAJADOR T, INVESTIGADOR_DEPARTAMENTO ID, DEPARTAMENTO D
        WHERE T.ID = ID.ID_INVESTIGADOR
          AND ID.CODIGO_DEPARTAMENTO = D.CODIGO
          AND D.ID_DIRIGE = p_supervisor_id
          AND T.ID != p_supervisor_id;  -- Excluimos al supervisor de los resultados

    -- Variable para almacenar los resultados del cursor
    trabajador c_trabajadores%ROWTYPE;
BEGIN
    -- Abrir el cursor
    OPEN c_trabajadores;

    -- Procesar los resultados fila por fila
    LOOP
        FETCH c_trabajadores INTO trabajador;  -- Obtener la siguiente fila del cursor
        EXIT WHEN c_trabajadores%NOTFOUND;  -- Salir cuando no haya más filas

        -- Mostrar los resultados
        DBMS_OUTPUT.PUT_LINE('ID: ' || trabajador.ID || ' - Nombre: ' || trabajador.NOMBRE || ' ' || trabajador.APELLIDOS);
    END LOOP;

    -- Cerrar el cursor
    CLOSE c_trabajadores;
END;
/

CREATE OR REPLACE PROCEDURE listar_medicamentos_por_tipo(
    p_tipo IN VARCHAR
)
IS
    CURSOR c_medicamentos IS
        SELECT CODIGO, DESCRIPCION, FECHA_CADUCIDAD
        FROM MEDICAMENTO
        WHERE TIPO = p_tipo;

    medicamento c_medicamentos%ROWTYPE;
BEGIN
    OPEN c_medicamentos;

    LOOP
        FETCH c_medicamentos INTO medicamento;
        EXIT WHEN c_medicamentos%NOTFOUND;

        DBMS_OUTPUT.PUT_LINE('Código: ' || medicamento.CODIGO || 
                             ', Descripción: ' || medicamento.DESCRIPCION ||
                             ', Fecha de Caducidad: ' || TO_CHAR(medicamento.FECHA_CADUCIDAD, 'YYYY-MM-DD'));
    END LOOP;

    CLOSE c_medicamentos;
END;
/

--SENTENCIAS DE DEFINICIÓN DE BLOQUES DE PRUEBAS BEGIN

DECLARE
    -- Variables para almacenar resultados
    numMedicamentos NUMBER;
    sumaSalarios NUMBER;
    salarioPromedio NUMBER;
BEGIN
    DBMS_OUTPUT.PUT_LINE('--- Ejecutando medicamentos_por_departamento ---');
    numMedicamentos := medicamentos_por_departamento('D001');
    DBMS_OUTPUT.PUT_LINE('Número de medicamentos en el departamento D001: ' || numMedicamentos);

    DBMS_OUTPUT.PUT_LINE('--- Ejecutando SumaSalariosDept ---');
    sumaSalarios := SumaSalariosDept('INVESTIGACIÓN');
    DBMS_OUTPUT.PUT_LINE('Suma de salarios en el departamento INVESTIGACIÓN: ' || sumaSalarios);

    DBMS_OUTPUT.PUT_LINE('--- Ejecutando listar_trabajadores_supervisados ---');
    listar_trabajadores_supervisados(3);
    DBMS_OUTPUT.PUT_LINE('Trabajadores supervisados listados.');

    DBMS_OUTPUT.PUT_LINE('--- Ejecutando listar_medicamentos_por_tipo ---');
    listar_medicamentos_por_tipo('ANTIBIOTICO');
    DBMS_OUTPUT.PUT_LINE('Medicamentos de tipo VACUNA listados.');

EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Ocurrió un error: ' || SQLERRM);
END;
/